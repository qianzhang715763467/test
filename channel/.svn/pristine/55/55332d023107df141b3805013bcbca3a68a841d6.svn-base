<?php

namespace common\lib;

use Yii;
use yii\linslin\Curl;
class Common{
    
    /**
     * 检查是否可以结算申请
     * @param $accountId 魔页账户id
     * @param $amount 提现金额
     * @return array
     */
    public function checkIsSettlement($accountId, $amount = ''){
        //判断当前用户是否有未完成的申请
            $lastSettlementInfo = \common\models\Settlement::find()->where(['account_id' => $accountId])->orderby('id desc')->asArray()->one();
            if( $lastSettlementInfo['ask_status'] == \common\models\Settlement::ASK_STATUS_WAIT){
                //有等待审核申请，无法继续进行再一次申请
                $returnData['flag'] = false;
                $returnData['msg'] = '您有未处理完的结算申请，无法再次申请';
                return $returnData;
            }elseif( $lastSettlementInfo['ask_status'] == \common\models\Settlement::ASK_STATUS_PASS && $lastSettlementInfo['pay_status'] == \common\models\Settlement::PAY_STATUS_WAIT ){
                //有审核通过，等待打款的申请
                $returnData['flag'] = false;
                $returnData['msg'] = '您有未处理完的结算申请，无法再次申请';
                return $returnData;
            }
//           if( Yii::$app->params['lanye_account_id'] == $accountId ){
            //如果是蓝页账户提现不做限制
//            }else{
            $api = new \common\lib\Api;
            $userInfo = $api->getUserInfoById($accountId);
            //系统参数
            $sysParamInfo = \common\models\ParamsSet::find()->where(['id'=>1])->asArray()->one();
            if( $userInfo['approver_type'] == 2 ){
                //企业认证
                if($amount){
                    //结算金额是否满足最低金额
                    if( $amount < $sysParamInfo['company_min_price'] ){
                        $returnData['flag'] = false;
                        $returnData['msg'] = '最低提现金额'. $sysParamInfo['company_min_price'].'起';
                        return $returnData;
                    }
                }
                //每月提现上限验证
                $settlementObj = \common\models\Settlement::find();
                $where = [
                    'account_id' => $accountId,
                    'FROM_UNIXTIME(create_time,"%Y-%m")' => date("Y-m"),
                   'ask_status' => [\common\models\Settlement::ASK_STATUS_WAIT,\common\models\Settlement::ASK_STATUS_PASS]
                ];
                $monthCount = $settlementObj->where($where)->count();
                //debug($settlementObj->createCommand()->sql);
                if( $monthCount >= $sysParamInfo['company_month_num'] ){
                    $returnData['flag'] = false;
                    $returnData['msg'] = '每月最多提现'. $sysParamInfo['company_month_num'].'次';
                    return $returnData;
                }

            }elseif($userInfo['approver_type'] == 1){
                //个人认证
                if($amount){
                    //结算金额是否满足最低金额
                    if( $amount < $sysParamInfo['person_min_price'] ){
                        $returnData['flag'] = false;
                        $returnData['msg'] = '最低提现金额'. $sysParamInfo['person_min_price'].'起';
                        return $returnData;
                    }
                }
                //每月提现上限验证
                $settlementObj = \common\models\Settlement::find();
                $where = [
                    'account_id' => $accountId,
                    'FROM_UNIXTIME(create_time,"%Y-%m")' => date("Y-m"),
                   'ask_status' => [\common\models\Settlement::ASK_STATUS_WAIT,\common\models\Settlement::ASK_STATUS_PASS]
                ];
                $monthCount = $settlementObj->where($where)->count();
                //debug($settlementObj->createCommand()->sql);
                if( $monthCount >= $sysParamInfo['person_month_num'] ){
                    $returnData['flag'] = false;
                    $returnData['msg'] = '每月最多提现'. $sysParamInfo['person_month_num'].'次';
                    return $returnData;
                }
            }else{
                $returnData['flag'] = false;
                $returnData['msg'] = '必须实名认证';
                return $returnData;
            }
//            }
        $returnData['flag'] = true;
        $returnData['msg'] = '';
        return $returnData;
    }

}
