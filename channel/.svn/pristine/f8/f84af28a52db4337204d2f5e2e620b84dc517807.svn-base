<?php

namespace backend\models\search;

use common\models\Agent;
use Yii;
use yii\base\Model;
use yii\data\ActiveDataProvider;

/**
 * AdSearch represents the model behind the search form about `backend\models\Ad`.
 */
class AgentSearch extends Agent
{
    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
//            [['status', 'level',  'create_time', 'update_time'], 'integer'],
        ];
    }

    /**
     * @inheritdoc
     */
    public function scenarios()
    {
        // bypass scenarios() implementation in the parent class
        return Model::scenarios();
    }

    /**
     * Creates data provider instance with search query applied
     *
     * @param array $params
     *
     * @return ActiveDataProvider
     */
    public function search($params)
    {

        if(Yii::$app->session['isLanYe']){
            $query = Agent::find();
        }else{
            $query = Agent::find();
            if(Yii::$app->session['level']==Agent::LEVEL_ROOT){

                $query->where(['level0_id'=>Yii::$app->user->identity->agent_id])->all();
            }
            if(Yii::$app->session['level']==Agent::LEVEL_FIRST){

                $query->where(['level1_id'=>Yii::$app->user->identity->agent_id])->all();
            }
        }

        $dataProvider = new ActiveDataProvider([
            'query' => $query,
            'pagination' => [
                'pageSize' => 10,
            ],
        ]);

        $this->load($params);
        if (!$this->validate()) {
            // uncomment the following line if you do not want to return any records when validation fails
            // $query->where('0=1');
            return $dataProvider;
        }

        $query->andFilterWhere([
            'id' => $this->id,
        ]);

        $query->andFilterWhere(['like', 'status', $this->status])
            ->andFilterWhere(['like', 'level', $this->level]);


        /* 排序 */
        $query->orderBy([
            'id' => SORT_DESC,
        ]);

        return $dataProvider;
    }
}
