<!DOCTYPE html>
<meta charset="utf-8">
<title>Zoom + Pan</title>
<style>

    body {
        position: relative;
        width: 960px;
    }

    svg {
        font: 10px sans-serif;
        shape-rendering: crispEdges;
    }

    rect {
        fill: #ddd;
    }

    .axis path,
    .axis line {
        fill: none;
        stroke: #fff;
    }

    button {
        position: absolute;
        right: 30px;
        top: 30px;
    }

</style>
<button>Reset</button>
<script src="//d3js.org/d3.v4.min.js"></script>
<script>

    var margin = {top: 20, right: 20, bottom: 30, left: 40},
    width = 960 - margin.left - margin.right,
            height = 500 - margin.top - margin.bottom;

    var x = d3.scaleLinear()
            .domain([-width / 2, width / 2])
            .range([0, width]);

    var y = d3.scaleLinear()
            .domain([-height / 2, height / 2])
            .range([height, 0]);

    var xAxis = d3.axisBottom()
            .scale(x)
            .tickSize(-height);

    var yAxis = d3.axisLeft()
            .scale(y)
            .ticks(5)
            .tickSize(-width);

    var zoom = d3.zoom()
            .scaleExtent([1, 10])
            .translateExtent([[-100, -100], [width + 90, height + 100]])
            .on("zoom", zoomed);

    var svg = d3.select("body").append("svg")
            .attr("width", width + margin.left + margin.right)
            .attr("height", height + margin.top + margin.bottom)
            .append("g")
            .attr("transform", "translate(" + margin.left + "," + margin.top + ")")
            .call(zoom);

    var rect = svg.append("rect")
            .attr("width", width)
            .attr("height", height);

    var gX = svg.append("g")
            .attr("class", "x axis")
            .attr("transform", "translate(0," + height + ")")
            .call(xAxis);

    var gY = svg.append("g")
            .attr("class", "y axis")
            .call(yAxis);

    d3.select("button").on("click", reset);

    function zoomed() {
        //rect.attr("transform", d3.event.transform);
        gX.call(xAxis.scale(d3.event.transform.rescaleX(x)));
        gY.call(yAxis.scale(d3.event.transform.rescaleY(y)));
    }

    function reset() {
        d3.transition().duration(750).tween("zoom", function () {
            var ix = d3.interpolate(x.domain(), [-width / 2, width / 2]),
                    iy = d3.interpolate(y.domain(), [-height / 2, height / 2]);
            return function (t) {
                zoom.x(x.domain(ix(t))).y(y.domain(iy(t)));
                zoomed();
            };
        });
    }

</script>